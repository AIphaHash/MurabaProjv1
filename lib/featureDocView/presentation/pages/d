import 'dart:convert';
import 'package:http/http.dart' as http;

class AuthService {
  String? _cookie; // Variable to store cookies

  // Function for login and getting cookies, then making an authenticated request
  Future<String> loginAndGetCookies(String username, String password) async {
    final loginUrl = Uri.parse('https://devdmisapi.muraba.dev/api/account/login');
    final requestBody = {
      "UserNameOrEmailAddress": username,
      "Password": password,
      "RememberMe": true,
    };

    try {
      // Step 1: Log in and get cookies
      final loginResponse = await http.post(
        loginUrl,
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
        },
        body: jsonEncode(requestBody),
      );

      if (loginResponse.statusCode == 200) {
        _cookie = loginResponse.headers['set-cookie'];

        // Step 2: Use the cookies to make an authenticated request
        return await sendAuthenticatedRequest();
      } else {
        throw Exception('Login Failed: ${loginResponse.statusCode} - ${loginResponse.body}');
      }
    } catch (e) {
      throw Exception('Error during login and authenticated request: $e');
    }
  }

  // Function to send authenticated requests
  Future<String> sendAuthenticatedRequest() async {
    final url = Uri.parse('https://devdmisapi.muraba.dev/api/app/doctor/info-as-doctor');
    try {
      final response = await http.get(
        url,
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json',
          if (_cookie != null) 'Cookie': _cookie!,
        },
      );

      if (response.statusCode == 200) {
        return 'Authenticated Request Successful';
      } else {
        throw Exception('Request Failed: ${response.statusCode} - ${response.body}');
      }
    } catch (e) {
      throw Exception('Error during authenticated request: $e');
    }
  }
}
